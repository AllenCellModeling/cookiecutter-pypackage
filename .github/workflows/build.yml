name: Example Repo

on:
  push:
    branches:
      - master
  schedule:
    # <minute [0,59]> <hour [0,23]> <day of the month [1,31]> <month of the year [1,12]> <day of the week [0,6]>
    # https://pubs.opengroup.org/onlinepubs/9699919799/utilities/crontab.html#tag_20_25_07
    # Run every Monday at 18:00:00 UTC (Monday at 10:00:00 PST)
    - cron: '0 18 * * 1'

jobs:
  build-repo:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 6
      matrix:
        python_version: [3.6, 3.7]
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
    - uses: actions/checkout@master
    - name: Generate Example Repo
      if: matrix.os == 'ubuntu-latest' && matrix.python_version == '3.7'
      uses: JacksonMaxfield/github-pages-deploy-action-python@master
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        BASE_BRANCH: master # The branch the action should deploy from.
        BRANCH: testbuild # The branch the action should deploy to.
        FOLDER: python_boilerplate # The folder the action should deploy.
        BUILD_SCRIPT: pip install cookiecutter && cookiecutter gh:AllenCellModeling/cookiecutter-pypackage --no-input && rm -Rf python_boilerplate/.github/workflows/

    - name: Generate Example Docs
      if: matrix.os == 'ubuntu-latest' && matrix.python_version == '3.7'
      uses: JacksonMaxfield/github-pages-deploy-action-python@master
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        BASE_BRANCH: testbuild # The branch the action should deploy from.
        BRANCH: 'gh-pages' # The branch the action should deploy to.
        FOLDER: docs/_build/html # The folder the action should deploy. This example folder is generated by Sphinx
        BUILD_SCRIPT: pip install .[dev] && make gen-docs && touch docs/_build/html/.nojekyll # The build script the action should run prior to deploying.

    - name: Switch to testbuild Branch
      run: |
        git checkout testbuild

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@master
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[test]

    - name: Lint with flake8
      if: matrix.os == 'ubuntu-latest' && matrix.python_version == '3.7'
      run: |
        flake8 python_boilerplate --count --verbose --max-line-length=127 --show-source --statistics

    - name: Test with pytest
      run: |
        pytest python_boilerplate/tests/
